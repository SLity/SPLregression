# ##########################
# CPAchecker configuration #
# ##########################

# ARGCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA

# reverse postorder (a more restrictive topological ordering) is better than dfs if elements may be merged
# callstack is necessary for ABE with blocks across function boundaries to work well
analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true

# predicate Analysis
cpa.predicate.encodeBitvectorAs = INTEGER
cpa.predicate.blk.alwaysAtFunctions = true
cpa.predicate.blk.alwaysAtLoops     = true
cpa.predicate.ignoreIrrelevantVariables = true
cpa.predicate.encodeFloatAs=INTEGER

# Guessing predicates statically from the CFA is a heuristic that pays off.
cpa.predicate.refinement.performInitialStaticRefinement = true
cpa.predicate.useNondetFlags = true

# Setting the option to make memory allocations always return correct addresses
cpa.predicate.memoryAllocationsAlwaysSucceed = true

# Use CEGAR
analysis.algorithm.CEGAR = true
cegar.refiner = cpa.predicate.PredicateRefiner

analysis.checkCounterexamples = false

# use SMTInterpol
solver.solver=Z3

# ########################
# CPAtiger configuration #
# ########################

# Use the Tiger Algorithm
analysis.algorithm.tiger = true

# time options
tiger.timeoutStrategy = RETRY_AFTER_TIMEOUT
tiger.limitsPerGoal.time.cpu = 3600
tiger.limitsPerGoal.time.cpu.increment = 3600
# Additional resource limits.
limits.time.cpu = 172800s

tiger.checkCoverage = true
tiger.allCoveredGoalsPerTestCase = false
tiger.printLabels = true

# the file is in the standard config directory
tiger.algorithmConfigurationFile = tiger-internal-algorithm---pred-refiner.properties

